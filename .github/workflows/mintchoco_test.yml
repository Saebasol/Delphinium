name: CI

on:
  push:
    branches: [ main, develop, release, hotfix ]
  pull_request:
    branches: [ main, develop, release, hotfix ]
  release:
    types: [ published ]

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --with style
      - name: Check style with black
        run: poetry run black --check .
      - name: Check style with isort
        run: poetry run isort --check .
        
  type:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --with type
      - name: Check type
        run: poetry run pyright
      - name: Check untyped function
        run: poetry run mypy ./phlox
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --with test
      - name: Check test
        run: poetry run pytest --asyncio-mode=auto

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [ type, test, style ]
    # only run this job when publishing a release
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install project dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --only main
    - name: Build package
      run: poetry build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}
